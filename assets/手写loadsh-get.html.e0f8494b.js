import{_ as n,o as s,c as a,d as t}from"./app.fbdceb87.js";const e={},p=t(`<h3 id="\u7B80\u8FF0lodash-get" tabindex="-1"><a class="header-anchor" href="#\u7B80\u8FF0lodash-get" aria-hidden="true">#</a> \u7B80\u8FF0lodash.get</h3><p>\u4F7F\u7528 <code>get</code> \u51FD\u6570\u53EF\u907F\u514D\u957F\u94FE\u7684 key \u65F6\u83B7\u53D6\u4E0D\u5230\u5C5E\u6027\u800C\u51FA\u73B0\u95EE\u9898\uFF0C\u6B64\u65F6\u8FDB\u884C\u5F02\u5E38\u907F\u514D\u65F6\u53CA\u5176\u670D\u52A1\uFF0C\u5982 <code>o.a &amp;&amp; o.a.b &amp;&amp; o.a.b.c &amp;&amp; o.a.b.c.d</code></p><p>\u6709\u4EE5\u4E0B\u6D4B\u8BD5\u7528\u4F8B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//=&gt; 3</span>
<span class="token function">get</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&quot;a[0].b.c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//=&gt; 3</span>
<span class="token function">get</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;a[0][&quot;b&quot;][&quot;c&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//=&gt; 10086</span>
<span class="token function">get</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&quot;a[100].b.c&quot;</span><span class="token punctuation">,</span> <span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF\uFF1A</h3><ul><li>get\u51FD\u6570\u67093\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F\u8981\u83B7\u53D6\u5C5E\u6027\u7684\u5BF9\u8C61\u3002\u7B2C\u4E8C\u4E2A\u662F\u83B7\u53D6\u8BE5\u5C5E\u6027\u7684\u8DEF\u5F84\uFF0C\u7B2C\u4E09\u4E2A\u662FdefaultValue \u5373\u51FA\u73B0\u5F02\u5E38\u65F6\u8FD4\u56DE\u7684\u503C</li><li>\u7528<code>[]</code>\u6765\u8BBF\u95EE\u5BF9\u8C61\u7684\u5C5E\u6027 \u5373\u4F7F\u7528\u4E0E\u6570\u7EC4\u7684\u8BBF\u95EE \u4E5F\u9002\u7528\u4E8E\u5BF9\u8C61\u7684\u8BBF\u95EE</li><li>\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u914D\u5408<code>replace</code>\u628A\u8DEF\u5F84\u5904\u7406\u6210\u6570\u7EC4 \uFF0Cfor\u5FAA\u73AF\u8BBF\u95EE\u5BF9\u8C61</li><li>\u4F7F\u7528<code>?.[]</code>\u6765\u8BBF\u95EE\u5BF9\u8C61\u8FDB\u884C\u5F02\u5E38\u907F\u514D</li></ul><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* //=&gt; 3
get(object, &quot;a[0].b.c&quot;);

//=&gt; 3
get(object, &#39;a[0][&quot;b&quot;][&quot;c&quot;]&#39;);

//=&gt; 10086
get(object, &quot;a[100].b.c&quot;, 10086); */</span>

<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> path<span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token keyword">undefined</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5229\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5904\u7406path</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> path
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[(\\w+)\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[&#39;(\\w+)&#39;\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[&quot;(\\w+)&quot;\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> obj<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> it <span class="token keyword">of</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">=</span> res<span class="token operator">?.</span><span class="token punctuation">[</span>it<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>res <span class="token operator">??=</span> defaultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">get</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&quot;a[100].b.c&quot;</span><span class="token punctuation">,</span> <span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","\u624B\u5199loadsh-get.html.vue"]]);export{r as default};
